# Generated by Django 4.2.14 on 2025-04-18 01:06

from django.db import migrations, models
import django.db.models.deletion


def get_existing_details(movie, DetailsModel) -> bool:
    """Returns existing movie details."""
    if movie.movie_id:
        try:
            return DetailsModel.objects.get(source=movie.movie_id)
        except DetailsModel.DoesNotExist:
            return None
    try:
        return DetailsModel.objects.get(title=movie.title)
    except DetailsModel.DoesNotExist:
        return None


def show(source):
    """Displays IMDB ID or 'unknown'."""
    return source or "unknown"


def copy_details_over(apps, schema_editor):
    """Copy movie info to new details model."""
    Movie = apps.get_model("viewmaster", "Movie")
    MovieDetails = apps.get_model("viewmaster", "MovieDetails")

    total = 0
    created = 0
    shared = 0
    print("\n\nMigrating data...")
    for m in Movie.objects.order_by("title"):
        total += 1
        details = get_existing_details(m, MovieDetails)
        if not details:
            details = MovieDetails(
                title=m.title,
                release=m.release,
                genre=m.category,
                rating=m.rating,
                duration=m.duration,
                plot=m.plot,
                actors=m.actors,
                directors=m.directors,
                cover_url=m.cover_ref,
                source=m.movie_id,
            )
            details.save()
            print(
                f"{m.title} {m.format} Creating details from movie with IMDB ID {show(details.source)}"
            )
            created += 1
        else:
            print(
                f"{m.title} {m.format} Sharing existing details with IMDB ID {show(details.source)}"
            )
            shared += 1
        m.details = details
        m.save()
    print(
        "\nSTATS:\n"
        f"    Total:   {total}\n"
        f"    Created: {created}\n"
        f"    Shared:  {shared}\n\n"
    )


class Migration(migrations.Migration):

    dependencies = [
        ("viewmaster", "0008_alter_movie_category"),
    ]

    operations = [
        # Add new table
        migrations.CreateModel(
            name="MovieDetails",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="Up to 60 characters for title.", max_length=60
                    ),
                ),
                (
                    "release",
                    models.IntegerField(help_text="Four digit year of release."),
                ),
                (
                    "genre",
                    models.CharField(
                        choices=[
                            ("ACTION", "action"),
                            ("ADVENTURE", "adventure"),
                            ("ANIMATED", "animated"),
                            ("BIOGRAPHY", "biography"),
                            ("CHILDRENS", "childrens"),
                            ("COMEDY", "comedy"),
                            ("CRIME", "crime"),
                            ("DOCUMENTARY", "documentary"),
                            ("DRAMA", "drama"),
                            ("FAMILY", "family"),
                            ("FANTASY", "fantasy"),
                            ("HISTORY", "history"),
                            ("HORROR", "horror"),
                            ("MILITARY", "military"),
                            ("MISC", "misc"),
                            ("MUSICAL", "musical"),
                            ("MYSTERY", "mystery"),
                            ("ROMANCE", "romance"),
                            ("SCI-FI", "sci-fi"),
                            ("SUSPENSE", "suspense"),
                            ("THRILLER", "thriller"),
                            ("UNKNOWN", "unknown"),
                            ("WESTERN", "western"),
                        ],
                        help_text="Prominent genre.",
                        max_length=20,
                    ),
                ),
                (
                    "rating",
                    models.CharField(
                        choices=[
                            ("G", "G"),
                            ("PG", "PG"),
                            ("PG-13", "PG-13"),
                            ("R", "R"),
                            ("X", "X"),
                            ("NR", "NR"),
                            ("?", "?"),
                        ],
                        default="?",
                        help_text="Select the MPAA rating",
                        max_length=5,
                    ),
                ),
                ("duration", models.TimeField(help_text="Duration in hh:mm format.")),
                (
                    "plot",
                    models.CharField(blank=True, default="", help_text="Plot summary."),
                ),
                (
                    "actors",
                    models.CharField(blank=True, default="", help_text="Top cast."),
                ),
                (
                    "directors",
                    models.CharField(blank=True, default="", help_text="Director(s)."),
                ),
                (
                    "source",
                    models.CharField(
                        blank=True,
                        default="unknown",
                        help_text="IMDB identifier, if known.",
                    ),
                ),
                (
                    "cover_url",
                    models.URLField(
                        blank=True, default="", help_text="Poster image URL."
                    ),
                ),
            ],
        ),
        # Make fields nullable for movies (so can remove later)
        migrations.AlterField(
            model_name="movie",
            name="category",
            field=models.CharField(
                choices=[
                    ("ACTION", "action"),
                    ("ADVENTURE", "adventure"),
                    ("ANIMATED", "animated"),
                    ("BIOGRAPHY", "biography"),
                    ("CHILDRENS", "childrens"),
                    ("COMEDY", "comedy"),
                    ("CRIME", "crime"),
                    ("DOCUMENTARY", "documentary"),
                    ("DRAMA", "drama"),
                    ("FAMILY", "family"),
                    ("FANTASY", "fantasy"),
                    ("HISTORY", "history"),
                    ("HORROR", "horror"),
                    ("MILITARY", "military"),
                    ("MISC", "misc"),
                    ("MUSICAL", "musical"),
                    ("MYSTERY", "mystery"),
                    ("ROMANCE", "romance"),
                    ("SCI-FI", "sci-fi"),
                    ("SUSPENSE", "suspense"),
                    ("THRILLER", "thriller"),
                    ("UNKNOWN", "unknown"),
                    ("WESTERN", "western"),
                ],
                help_text="Select a genre",
                max_length=20,
                null=True,
            ),
        ),
        migrations.AlterField(
            model_name="movie",
            name="duration",
            field=models.TimeField(help_text="Duration in hh:mm format.", null=True),
        ),
        migrations.AlterField(
            model_name="movie",
            name="release",
            field=models.IntegerField(
                help_text="Four digit year of release.", null=True
            ),
        ),
        migrations.AlterField(
            model_name="movie",
            name="title",
            field=models.CharField(
                help_text="Up to 60 characters for title.", max_length=60, null=True
            ),
        ),
        # Add reference to new table
        migrations.AddField(
            model_name="movie",
            name="details",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="viewmaster.moviedetails",
            ),
        ),
        # Do data migration to new table
        migrations.RunPython(copy_details_over, migrations.RunPython.noop),
    ]
