# Generated by Django 5.2 on 2025-05-13 16:37

from django.db import migrations


def restore_imdb_info_into_movie(apps, schema_editor):
    """Copy IMDB info back into Movie entries."""
    Movie = apps.get_model("viewmaster", "Movie")
    ImdbInfo = apps.get_model("viewmaster", "ImdbInfo")
    print("\n\nReverse Migration: copying IMDB info into movies...")
    count = 0
    total = 0
    for m in Movie.objects.order_by("title"):
        total += 1
        imdb_info = m.imdb_info
        if imdb_info:
            m.plot = imdb_info.plot
            m.actors = imdb_info.actors
            m.directors = imdb_info.directors
            m.cover_ref = imdb_info.cover_url
            m.movie_id = imdb_info.identifier
            m.save()
            count += 1
            print(f"Restored IMDB info for movie '{m.title}'")
    print("\nSTATS:\n" f"    Movies:        {total}\n" f"    IMDB Restored: {count}\n")


class Migration(migrations.Migration):

    dependencies = [
        ("viewmaster", "0010_rename_rating_imdbinfo_mpaa_rating_and_more"),
    ]

    operations = [
        migrations.RunPython(migrations.RunPython.noop, restore_imdb_info_into_movie),
        migrations.RemoveField(
            model_name="movie",
            name="actors",
        ),
        migrations.RemoveField(
            model_name="movie",
            name="cover_ref",
        ),
        migrations.RemoveField(
            model_name="movie",
            name="directors",
        ),
        migrations.RemoveField(
            model_name="movie",
            name="movie_id",
        ),
        migrations.RemoveField(
            model_name="movie",
            name="plot",
        ),
    ]
